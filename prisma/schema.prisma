generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model employee_data {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  address      String    @db.VarChar(255)
  phone_number String    @db.VarChar(20)
  tax_id       String    @db.VarChar(50)
  start_date   DateTime  @db.Timestamp(6)
  end_date     DateTime? @db.Timestamp(6)
  user_id      String    @db.Uuid
  created_at   DateTime  @default(now()) @db.Timestamp(6)
  updated_at   DateTime  @default(now()) @db.Timestamp(6)
  user         user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model hr_manager {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String   @db.Uuid
  hire_date  DateTime @db.Timestamp(6)
  department String   @db.VarChar(255)
  position   String   @db.VarChar(255)
  supervisor String?  @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model payroll {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  salary     Int
  bonus      Int?
  deductions Int?
  net_pay    Int
  pay_date   DateTime @db.Timestamp(6)
  user_id    String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model system_administrator {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id      String   @db.Uuid
  hire_date    DateTime @db.Timestamp(6)
  department   String   @db.VarChar(255)
  position     String   @db.VarChar(255)
  access_level String   @db.VarChar(50)
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  user         user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model team {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                String                 @unique @db.VarChar(255)
  firstName            String?                @db.VarChar(255)
  lastName             String?                @db.VarChar(255)
  roq_user_id          String                 @db.VarChar(255)
  tenant_id            String                 @db.VarChar(255)
  created_at           DateTime               @default(now()) @db.Timestamp(6)
  updated_at           DateTime               @default(now()) @db.Timestamp(6)
  employee_data        employee_data[]
  hr_manager           hr_manager[]
  payroll              payroll[]
  system_administrator system_administrator[]
  team                 team[]
}
